#!/bin/sh
# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

#Russian Locale
export LC_ALL=ru_RU.UTF-8

# # if running bash
if [ -n "$BASH_VERSION" ]; then
    # include .bashrc if it exists
    if [ -f "$HOME/.bashrc" ]; then
        . "$HOME/.bashrc"
    fi
fi

##### PATH #####
# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/.cabal/bin/" ]; then
    PATH="$HOME/.cabal/bin:$PATH"
fi

if [ -d "$HOME/.ghcup/bin/" ]; then
    PATH="$HOME/.ghcup/bin:$PATH"
fi

if [ -d "$HOME/bin" ]; then
    PATH="$HOME/bin:$PATH"
fi

if [ -d "$HOME/.local/share/nvim/mason/bin:$PATH" ]; then

    PATH="$HOME/.local/share/nvim/mason/bin:$PATH"
fi

#Cargo bin
if [ -d "$HOME/.cargo/bin" ]; then
    PATH="$HOME/.cargo/bin:$PATH"
fi

# Luarocks
if [ -d "$HOME/.luarocks/bin" ]; then
    PATH="$HOME/.luarocks/bin:$PATH"
fi

#radare2 git
if [ -d "$HOME/.cargo/bin" ]; then
    PATH="$HOME/.r2env/versions/radare2@git/bin:$PATH"
fi

if [ -d "$HOME/.local/bin" ]; then
    PATH="$HOME/.local/bin:$PATH"
fi

#Load config for WMs running on matebook
if [ "$HOSTNAME" = matebook ] && ([ "$DESKTOP_SESSION" = qtile ] || [ "$DESKTOP_SESSION" = "awesome" ]); then
    if [ -f "$HOME/.config/rusich/xconfig-matebook.conf" ]; then
        . "$HOME/.config/rusich/xconfig-matebook.conf"
    fi
fi

#Load config for WMs running on darkstar
if [ "$HOSTNAME" = darkstar ] && ([ "$DESKTOP_SESSION" = qtile ] || [ "$DESKTOP_SESSION" = "awesome" ]); then
    # set /ush/share/sddm/Xsetup:
    #!/bin/sh
    # Xsetup - run as root before the login dialog appears
    #xrandr --output DP-4 --off

    # set /etc/sddm.conf.d/kde_settings.conf
    # [XDisplay]
    # DisplayCommand=/usr/share/sddm/scripts/Xsetup
    PRIMARY_DISPLAY=DP-1
    SECONDARY_DISPLAY=DP-2
    xrandr --output $PRIMARY_DISPLAY --primary --auto --output $SECONDARY_DISPLAY --left-of $PRIMARY_DISPLAY --auto
fi

#better look & feel for wms
# export GTK2_RC_FILES="$HOME/.gtkrc-2.0"
export QT_QPA_PLATFORMTHEME=qt6ct
# if [ "$DESKTOP_SESSION" != gnome ] && [ "$DESKTOP_SESSION" != gnome-wayland ] && [ "$DESKTOP_SESSION" != ubuntu ]; then
if [[ "$XDG_CURRENT_DESKTOP" != *"GNOME"* ]]; then
    export GTK_USE_PORTAL=1
fi

#iBus
#export GTK_IM_MODULE=ibus
#export XMODIFIERS=@im=ibus
#export QT_IM_MODULE=ibus

#
# This file is parsed by pam_env module
#
# Syntax: simple "KEY=VAL" pairs on separate lines
#

# Added by Toolbox App
export PATH="$PATH:/home/rusich/.local/share/JetBrains/Toolbox/scripts"

#security
umask 0077

# for eve-ng-integration
export OVERRIDE_TERMINAL_CMD="kitty sh -c "

export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'
export EDITOR=nvim

# PAGER to neovim
# export PAGER="/bin/sh -c \"unset PAGER;col -b -x | \
#     nvim -R -c 'set ft=man nomod nolist' -c 'map q :q<CR>' \
#     -c 'map <SPACE> <C-D>' -c 'map b <C-U>' \
#     -c 'nmap K :Man <C-R>=expand(\\\"<cword>\\\")<CR><CR>' -\""
export PAGER="less"
export MANPAGER="sh -c 'col -bx | bat --theme Dracula -l man -p'"
export MANROFFOPT="-c"

# Proxy API for OpenAI
export OPENAI_API_HOST="https://api.proxyapi.ru/openai"

# for virsh
export LIBVIRT_DEFAULT_URI="qemu:///system"

# ssh-agent init
eval $(ssh-agent)

if [ -f "$HOME/.profile-local" ]; then
    . "$HOME/.profile-local"
fi

# Added by LM Studio CLI (lms)
export PATH="$PATH:/home/rusich/.lmstudio/bin"

# Luarocks fix for busted
eval $(nluarocks path --no-bin)

# Libvirt default system context
export LIBVIRT_DEFAULT_URI="qemu:///system"

# Android + Flutter
export ANDROID_HOME=$HOME/dev/android-sdk

export PATH=$PATH:$ANDROID_HOME/platform-tools
export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin
export JAVA_HOME=/usr/lib/jvm/java-17-openjdk
export PATH="$PATH:$HOME/dev/flutter/bin"
