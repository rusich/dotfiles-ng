" vim:set fdm=marker:
"no compat.
set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'morhetz/gruvbox'
Plugin 'dracula/vim'
Plugin 'vim-airline/vim-airline.git'
Plugin 'vim-airline/vim-airline-themes.git'
" Plugin 'majutsushi/tagbar.git'
" Plugin 'edkolev/tmuxline.vim.git'
" Plugin 'SirVer/ultisnips.git'
" Plugin 'rhysd/vim-clang-format.git'
" Plugin 'derekwyatt/vim-fswitch.git'
Plugin 'tpope/vim-fugitive.git'
Plugin 'airblade/vim-gitgutter.git'
" Plugin 'tpope/vim-git.git'
" Plugin 'honza/vim-snippets.git'
Plugin 'godlygeek/tabular.git'
" Plugin 'tpope/vim-unimpaired.git'
Plugin 'tpope/vim-surround.git'
" Plugin 'tpope/vim-repeat.git'
" Plugin 'Shirk/vim-gas.git'
Plugin 'davidhalter/jedi-vim.git'
Plugin 'preservim/nerdtree'

"Plugin 'neovim/nvim-lspconfig'
"Plugin 'hrsh7th/cmp-nvim-lsp'
"Plugin 'hrsh7th/cmp-buffer'
"Plugin 'hrsh7th/cmp-path'
"Plugin 'hrsh7th/cmp-cmdline'
"Plugin 'hrsh7th/nvim-cmp'
"Plugin 'hrsh7th/cmp-nvim-lua'

call vundle#end()

filetype plugin indent on
set background=dark
syntax enable
" tab config
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab "repace tab with spaces
set encoding=utf-8
set scrolloff=3

set t_Co=256
"indent
set autoindent
set cindent
set showmode
set showcmd
set hidden
set wildmenu
set wildmode=list:longest
set visualbell
set noerrorbells
set cursorline
set ttyfast
set ruler
set backspace=indent,eol,start
set laststatus=2
set number
"set relativenumber
"set undofile
set ignorecase
set smartcase
set incsearch
set showmatch
set hlsearch
set wrap
set linebreak
set showbreak=>\
set textwidth=79
set formatoptions=qrn1
set colorcolumn=85
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>
nnoremap j gj
nnoremap k gk
"set langmap=!\\"№\\;%?*ёйцукенгшщзхъфывапролджэячсмитьбюЁЙЦУКЕHГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮ;!@#$%&*`qwertyuiop[]asdfghjkl\\;'zxcvbnm\\,.~QWERTYUIOP{}ASDFGHJKL:\\"ZXCVBNM<>
"highlight lCursor guifg=NONE guibg=Cyan
set cpoptions+=$
set wildmode=list,full
set spr
set guioptions-=m

" Minimum lines used for comment syncing (default 50)
"let g:syntastic_auto_loc_list=1

" load .vimrc from current folder
set exrc
set secure


" statusline
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
"let gairline_theme='badwolf'
"let g:airline_theme='gruvbox'
"let gairline_theme='dracula'
colorscheme molokai


" Buffers - explore/next/previous: F12, PageDown, PageUp
nmap <F12> <Esc>:BufExplorer<cr>
vmap <F12> <esc>:BufExplorer<cr>
imap <F12> <esc>:BufExplorer<cr>
nnoremap <silent> <PageDown> :bn<cr>
nnoremap <silent> <PageUp> :bp<cr>

" airline-tumux
" let g:tmuxline_preset = {
"       \'a'    : '#S',
"      \'c'    : ['#(whoami)', '#(uptime |cut -d "," -f 1 | cut -d " " -f 5,3 )'],
"      \'win'  : ['#I', '#W'],
"      \'cwin' : ['#I', '#W', '#F'],
"      \'x'    : '#(date)',
"      \'y'    : ['%R', '%a', '%Y'],
"      \'z'    : '#H'}
" UniSnips
let g:airline#extensions#tmuxline#enabled = 1
" Snippets are separated from the engine. Add this if you want them:
" Plugin 'honza/vim-snippets'

" =====UltiSnips=====
"let g:UltiSnipsUsePythonVersion = 2
let g:UltiSnipsExpandTrigger="<c-j>"
let g:UltiSnipsListSnippets="<c-s-j"
"let g:UltiSnipsJumpForwardTrigger="<c-b>"
"let g:UltiSnipsJumpBackwardTrigger="<c-z>"
" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"
" =====UltiSnips end=====

"runtime ftplugin/man.vim

" =====Tagbar=====
nnoremap <silent> <F8> :TagbarToggle<CR>
let g:tagbar_autofocus = 1
let g:tagbar_sort = 0 "tagbar shows tags in order of they created in file
let g:tagbar_foldlevel = 0 "close tagbar folds by default
" =====Tagbar end=====

" =====Python-mode=====
"let g:pymode_options = 0
"let g:pymode_lint_write = 0 “не проверять при каждом сохранении
let g:pymode_folding = 0
let g:pymode_rope_vim_completion = 0
" =====Python-mode end=====
" Shortcut to rapidly toggle `set list`
"
nmap <leader>l :set list!<CR>
" Use the same symbols as TextMate for tabstops and EOLs
set listchars=tab:▸\ ,eol:¬
"set list " execute list command

" useful stuff
if has("autocmd")
    autocmd BufWritePre .vimrc :%s/\s\+$//e
    autocmd BufWritePost .vimrc source $MYVIMRC " Autoreload .vimrc if changed
    autocmd BufReadPost fugitive://* set bufhidden=delete
    autocmd FileType html set sw=2
endif

" bubble moving
nmap <C-k> ddkP
nmap <C-j> ddp
vmap <C-k>  xkP`[V`]
vmap <C-j> xp`[V`]
nnoremap <F2> :NERDTreeToggle<CR>
nnoremap <F5> :GundoToggle<CR>
inoremap <F5> <ESC>:GundoToggle<CR>
set diffopt+=vertical
nnoremap <Space> za
"let g:html_indent_inctags = "html,body,head,tbody"
command! -nargs=0 Sw w !sudo tee % > /dev/null
"colorscheme transparent
set termguicolors
"fixing alacritty
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
"set ttymouse=sgr
" hi Normal guibg=NONE ctermbg=NONE

set mouse=a
set noswapfile
set clipboard+=unnamedplus
set guioptions-=m

