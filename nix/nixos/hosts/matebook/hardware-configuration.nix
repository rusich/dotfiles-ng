# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  # Bootloader.
  boot = {
    loader.systemd-boot.enable = true;
    # loader.grub.enable = true;
    loader.efi.canTouchEfiVariables = true;
    # loader.grub.device = "/dev/nvme0n1";
    # loader.grub.useOSProber = true;
    plymouth = {
      enable = true;
    };
  };

  boot.initrd.luks.devices."luks-52a00d0e-a2c5-4fe1-84ed-3d2c487e1f54".device = "/dev/disk/by-uuid/52a00d0e-a2c5-4fe1-84ed-3d2c487e1f54";

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/7262435d-2094-4ce5-9188-6293fea25076";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-b9794106-dcfc-4ba9-b9c2-9c3996f554d0".device = "/dev/disk/by-uuid/b9794106-dcfc-4ba9-b9c2-9c3996f554d0";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/8CE5-A880";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/9b175e36-bde9-45d6-89cd-668ccd8b569d"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp60s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;


}
